从作者：赵春江 分析的 《opencv2.4.9源码分析――SIFT》
为模板，根据自己的理解写出的SIFT算法。
https://wenku.baidu.com/view/d7edd2464b73f242336c5ffa.html


考虑到matlab中内存原因，图片最好是500*500左右，可以放大一倍作为最下面一组
如果是1000*1000左右的图片，则不能放大图片了，matlab内存报错。修改enlarge = 0即可

本程序主要函数分为以下几大块
1.主函数match_yhb.m,读入两张图片并输出匹配的结果
2.函数 SIFT_yhb.m为生成SIFT的特征点以及描述符
3.函数Define（） 被SIFT_yhb.m调用，主要是生成全局变量。有关的参数定义全部在这里
4.函数sigma_num（）被Define调用，生成sigma数组。均是相对于本组内的尺度，并作为全局变量。
5.buildgausspyr()被SIFT_yhb.m调用生成高斯金字塔
6.buildDogpyr(）被SIFT_yhb.m调用生成Dog金字塔
7.findExtrma(）被SIFT_yhb.m调用，初步寻找极值点
8.adjustExtrPoint(）被findExtrma(）调用。精确点的进一步判断选择，并得出精确位置
9.oritHist(）被findExtrma(）调用。返回极值点的第一主方向，在 SIFT_yhb.m中进一步得出多个主方向
10.calcDescriptors(）被SIFT_yhb.m调用，生成128维描述符。



辅助函数：
1.appendimages(）被主函数match_yhb.m调用，这个函数完全从LOWE主页中拷贝过来的，非常简单就是连接两张图片到一张图像中显示
2.affinity(）被主函数match_yhb.m调用，生成特征点之间的仿射关系在返回的indx中偏差越大的索引在最前面，用于SIFT匹配以后人工检验正确率。

综上一共生成有12个函数。affinity1(）是我个人写的另外一个仿射函数并没有被采用，目的是在做仿射变换的时候，将坐标归一化以后再做仿射，因为仿射通过最小方差来求，防止匹配点坐标位置较大点占主导而考虑。

备注：有一定的错误匹配率。当在两张源图的局部看时，这些错误匹配率确实本身就很像。比如角落会直接匹配到另外一张图片中的不同物体的角落。且两个角落非常相似（可能局部亮度不一致但是其一阶导数是非常类似的，符合128位描述符的通过局部范围内的一阶导数描述）
